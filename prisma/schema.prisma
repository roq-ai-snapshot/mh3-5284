generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model channel {
  id                String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String             @db.VarChar(255)
  budget_allocation Int
  organization_id   String             @db.Uuid
  created_at        DateTime           @default(now()) @db.Timestamp(6)
  updated_at        DateTime           @default(now()) @db.Timestamp(6)
  organization      organization       @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  suggested_change  suggested_change[]
}

model organization {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  channel     channel[]
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model suggested_change {
  id                    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  channel_id            String   @db.Uuid
  user_id               String   @db.Uuid
  old_budget_allocation Int
  new_budget_allocation Int
  status                String   @db.VarChar(50)
  created_at            DateTime @default(now()) @db.Timestamp(6)
  updated_at            DateTime @default(now()) @db.Timestamp(6)
  channel               channel  @relation(fields: [channel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                  user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  organization     organization[]
  suggested_change suggested_change[]
}
